2020-03-30 15:13:29:464 grammar LogManager.java:25 before: (COMBINED_GRAMMAR mensajes (RULES (RULE name (BLOCK (ALT ID ID ID {
            System.out.println("El lexema del token ID es: "+ $ID.getText());
        }))) (RULE ID (BLOCK (ALT (+ (BLOCK (ALT [a-zA-Z])))))) (RULE WS (BLOCK (LEXER_ALT_ACTION (ALT [ \r\t\n]) skip)))))
2020-03-30 15:13:29:477 grammar LogManager.java:25 after: (COMBINED_GRAMMAR mensajes (RULES (RULE name (BLOCK (ALT ID ID ID {
            System.out.println("El lexema del token ID es: "+ $ID.getText());
        }))) (RULE ID (BLOCK (ALT (+ (BLOCK (ALT [a-zA-Z])))))) (RULE WS (BLOCK (LEXER_ALT_ACTION (ALT [ \r\t\n]) skip)))))
2020-03-30 15:13:29:500 grammar LogManager.java:25 after extract implicit lexer =(COMBINED_GRAMMAR mensajes (RULES (RULE name (BLOCK (ALT ID ID ID {
            System.out.println("El lexema del token ID es: "+ $ID.getText());
        })))))
2020-03-30 15:13:29:500 grammar LogManager.java:25 lexer =(LEXER_GRAMMAR mensajesLexer (RULES (RULE ID (BLOCK (ALT (+ (BLOCK (ALT [a-zA-Z])))))) (RULE WS (BLOCK (LEXER_ALT_ACTION (ALT [ \r\t\n]) skip)))))
2020-03-30 15:13:29:986 semantics LogManager.java:25 tokens={EOF=-1, ID=1, WS=2}
2020-03-30 15:13:29:986 semantics LogManager.java:25 strings={}
2020-03-30 15:13:30:034 action-translator LogManager.java:25 translate 
            System.out.println("El lexema del token ID es: "+ $ID.getText());
        
2020-03-30 15:13:30:035 action-translator LogManager.java:25 attr [@-1,65:66='ID',<0>,7:63]
