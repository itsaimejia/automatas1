2020-04-01 15:55:22:178 grammar LogManager.java:25 before: (COMBINED_GRAMMAR corchetes (RULES (RULE base (BLOCK (ALT OPEN (* (BLOCK (ALT NUMBER))) (* (BLOCK (ALT COMA))) CLOSE))) (RULE OPEN (BLOCK (ALT (+ (BLOCK (ALT '[')))))) (RULE CLOSE (BLOCK (ALT (+ (BLOCK (ALT ']')))))) (RULE NUMBER (BLOCK (ALT (+ (BLOCK (ALT [0-9])))))) (RULE COMA (BLOCK (ALT ','))) (RULE WS (BLOCK (LEXER_ALT_ACTION (ALT [ \t\n\r]) skip)))))
2020-04-01 15:55:22:190 grammar LogManager.java:25 after: (COMBINED_GRAMMAR corchetes (RULES (RULE base (BLOCK (ALT OPEN (* (BLOCK (ALT NUMBER))) (* (BLOCK (ALT COMA))) CLOSE))) (RULE OPEN (BLOCK (ALT (+ (BLOCK (ALT '[')))))) (RULE CLOSE (BLOCK (ALT (+ (BLOCK (ALT ']')))))) (RULE NUMBER (BLOCK (ALT (+ (BLOCK (ALT [0-9])))))) (RULE COMA (BLOCK (ALT ','))) (RULE WS (BLOCK (LEXER_ALT_ACTION (ALT [ \t\n\r]) skip)))))
2020-04-01 15:55:22:215 grammar LogManager.java:25 after extract implicit lexer =(COMBINED_GRAMMAR corchetes (RULES (RULE base (BLOCK (ALT OPEN (* (BLOCK (ALT NUMBER))) (* (BLOCK (ALT COMA))) CLOSE)))))
2020-04-01 15:55:22:215 grammar LogManager.java:25 lexer =(LEXER_GRAMMAR corchetesLexer (RULES (RULE OPEN (BLOCK (ALT (+ (BLOCK (ALT '[')))))) (RULE CLOSE (BLOCK (ALT (+ (BLOCK (ALT ']')))))) (RULE NUMBER (BLOCK (ALT (+ (BLOCK (ALT [0-9])))))) (RULE COMA (BLOCK (ALT ','))) (RULE WS (BLOCK (LEXER_ALT_ACTION (ALT [ \t\n\r]) skip)))))
2020-04-01 15:55:22:597 semantics LogManager.java:25 tokens={EOF=-1, OPEN=1, CLOSE=2, NUMBER=3, COMA=4, WS=5}
2020-04-01 15:55:22:597 semantics LogManager.java:25 strings={','=4}
2020-04-01 15:55:22:600 LL1 LogManager.java:25 
DECISION 0 in rule base
2020-04-01 15:55:22:604 LL1 LogManager.java:25 look=[3, {2, 4}]
2020-04-01 15:55:22:604 LL1 LogManager.java:25 LL(1)? true
2020-04-01 15:55:22:604 LL1 LogManager.java:25 
DECISION 1 in rule base
2020-04-01 15:55:22:604 LL1 LogManager.java:25 look=[4, 2]
2020-04-01 15:55:22:604 LL1 LogManager.java:25 LL(1)? true
