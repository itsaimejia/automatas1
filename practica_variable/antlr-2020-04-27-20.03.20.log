2020-04-27 20:03:19:899 grammar LogManager.java:25 before: (COMBINED_GRAMMAR variables (RULES (RULE variables (BLOCK (ALT estructura))) (RULE estructura (BLOCK (ALT INT NOMBRE {
                ValidateVar v = new ValidateVar($INT.text, $NOMBRE.text);
                v.valid();
            }) (ALT FLOAT NOMBRE {
                ValidateVar v = new ValidateVar($FLOAT.text, $NOMBRE.text);
                v.valid();
            }) (ALT CHAR NOMBRE {
                ValidateVar v = new ValidateVar($CHAR.text, $NOMBRE.text);
                v.valid();
            }) (ALT BOOLEAN NOMBRE {
                ValidateVar v = new ValidateVar($BOOLEAN.text, $NOMBRE.text);
                v.valid();
            }) (ALT DOUBLE NOMBRE {
                ValidateVar v = new ValidateVar($DOUBLE.text, $NOMBRE.text);
                v.valid();
            }) (ALT {
                System.out.println("ERROR de entrada");
            }))) (RULE INT (BLOCK (ALT 'int'))) (RULE CHAR (BLOCK (ALT 'char'))) (RULE FLOAT (BLOCK (ALT 'float'))) (RULE BOOLEAN (BLOCK (ALT 'boolean'))) (RULE DOUBLE (BLOCK (ALT 'double'))) (RULE NOMBRE (BLOCK (ALT (+ (BLOCK (ALT [a-zA-Z0-9_]))) PC))) (RULE PC (BLOCK (ALT ';'))) (RULE ENTER (BLOCK (ALT [\r\n]))) (RULE ESPACIOS (BLOCK (LEXER_ALT_ACTION (ALT [ ]) skip)))))
2020-04-27 20:03:19:923 grammar LogManager.java:25 after: (COMBINED_GRAMMAR variables (RULES (RULE variables (BLOCK (ALT estructura))) (RULE estructura (BLOCK (ALT INT NOMBRE {
                ValidateVar v = new ValidateVar($INT.text, $NOMBRE.text);
                v.valid();
            }) (ALT FLOAT NOMBRE {
                ValidateVar v = new ValidateVar($FLOAT.text, $NOMBRE.text);
                v.valid();
            }) (ALT CHAR NOMBRE {
                ValidateVar v = new ValidateVar($CHAR.text, $NOMBRE.text);
                v.valid();
            }) (ALT BOOLEAN NOMBRE {
                ValidateVar v = new ValidateVar($BOOLEAN.text, $NOMBRE.text);
                v.valid();
            }) (ALT DOUBLE NOMBRE {
                ValidateVar v = new ValidateVar($DOUBLE.text, $NOMBRE.text);
                v.valid();
            }) (ALT {
                System.out.println("ERROR de entrada");
            }))) (RULE INT (BLOCK (ALT 'int'))) (RULE CHAR (BLOCK (ALT 'char'))) (RULE FLOAT (BLOCK (ALT 'float'))) (RULE BOOLEAN (BLOCK (ALT 'boolean'))) (RULE DOUBLE (BLOCK (ALT 'double'))) (RULE NOMBRE (BLOCK (ALT (+ (BLOCK (ALT [a-zA-Z0-9_]))) PC))) (RULE PC (BLOCK (ALT ';'))) (RULE ENTER (BLOCK (ALT [\r\n]))) (RULE ESPACIOS (BLOCK (LEXER_ALT_ACTION (ALT [ ]) skip)))))
2020-04-27 20:03:19:956 grammar LogManager.java:25 after extract implicit lexer =(COMBINED_GRAMMAR variables (RULES (RULE variables (BLOCK (ALT estructura))) (RULE estructura (BLOCK (ALT INT NOMBRE {
                ValidateVar v = new ValidateVar($INT.text, $NOMBRE.text);
                v.valid();
            }) (ALT FLOAT NOMBRE {
                ValidateVar v = new ValidateVar($FLOAT.text, $NOMBRE.text);
                v.valid();
            }) (ALT CHAR NOMBRE {
                ValidateVar v = new ValidateVar($CHAR.text, $NOMBRE.text);
                v.valid();
            }) (ALT BOOLEAN NOMBRE {
                ValidateVar v = new ValidateVar($BOOLEAN.text, $NOMBRE.text);
                v.valid();
            }) (ALT DOUBLE NOMBRE {
                ValidateVar v = new ValidateVar($DOUBLE.text, $NOMBRE.text);
                v.valid();
            }) (ALT {
                System.out.println("ERROR de entrada");
            })))))
2020-04-27 20:03:19:956 grammar LogManager.java:25 lexer =(LEXER_GRAMMAR variablesLexer (RULES (RULE INT (BLOCK (ALT 'int'))) (RULE CHAR (BLOCK (ALT 'char'))) (RULE FLOAT (BLOCK (ALT 'float'))) (RULE BOOLEAN (BLOCK (ALT 'boolean'))) (RULE DOUBLE (BLOCK (ALT 'double'))) (RULE NOMBRE (BLOCK (ALT (+ (BLOCK (ALT [a-zA-Z0-9_]))) PC))) (RULE PC (BLOCK (ALT ';'))) (RULE ENTER (BLOCK (ALT [\r\n]))) (RULE ESPACIOS (BLOCK (LEXER_ALT_ACTION (ALT [ ]) skip)))))
2020-04-27 20:03:20:554 semantics LogManager.java:25 tokens={EOF=-1, INT=1, CHAR=2, FLOAT=3, BOOLEAN=4, DOUBLE=5, NOMBRE=6, PC=7, ENTER=8, ESPACIOS=9}
2020-04-27 20:03:20:554 semantics LogManager.java:25 strings={'int'=1, 'char'=2, 'float'=3, 'boolean'=4, 'double'=5, ';'=7}
2020-04-27 20:03:20:565 LL1 LogManager.java:25 
DECISION 0 in rule estructura
2020-04-27 20:03:20:573 LL1 LogManager.java:25 look=[1, 3, 2, 4, 5, <EOF>]
2020-04-27 20:03:20:574 LL1 LogManager.java:25 LL(1)? true
2020-04-27 20:03:20:610 action-translator LogManager.java:25 translate 
                ValidateVar v = new ValidateVar($INT.text, $NOMBRE.text);
                v.valid();
            
2020-04-27 20:03:20:610 action-translator LogManager.java:25 qattr [@-1,51:53='INT',<0>,11:49].[@-1,55:58='text',<0>,11:53]
2020-04-27 20:03:20:611 action-translator LogManager.java:25 qattr [@-1,62:67='NOMBRE',<0>,11:60].[@-1,69:72='text',<0>,11:67]
2020-04-27 20:03:20:612 action-translator LogManager.java:25 translate 
                ValidateVar v = new ValidateVar($FLOAT.text, $NOMBRE.text);
                v.valid();
            
2020-04-27 20:03:20:612 action-translator LogManager.java:25 qattr [@-1,51:55='FLOAT',<0>,17:49].[@-1,57:60='text',<0>,17:55]
2020-04-27 20:03:20:612 action-translator LogManager.java:25 qattr [@-1,64:69='NOMBRE',<0>,17:62].[@-1,71:74='text',<0>,17:69]
2020-04-27 20:03:20:618 action-translator LogManager.java:25 translate 
                ValidateVar v = new ValidateVar($CHAR.text, $NOMBRE.text);
                v.valid();
            
2020-04-27 20:03:20:619 action-translator LogManager.java:25 qattr [@-1,51:54='CHAR',<0>,23:49].[@-1,56:59='text',<0>,23:54]
2020-04-27 20:03:20:621 action-translator LogManager.java:25 qattr [@-1,63:68='NOMBRE',<0>,23:61].[@-1,70:73='text',<0>,23:68]
2020-04-27 20:03:20:622 action-translator LogManager.java:25 translate 
                ValidateVar v = new ValidateVar($BOOLEAN.text, $NOMBRE.text);
                v.valid();
            
2020-04-27 20:03:20:622 action-translator LogManager.java:25 qattr [@-1,51:57='BOOLEAN',<0>,29:49].[@-1,59:62='text',<0>,29:57]
2020-04-27 20:03:20:623 action-translator LogManager.java:25 qattr [@-1,66:71='NOMBRE',<0>,29:64].[@-1,73:76='text',<0>,29:71]
2020-04-27 20:03:20:628 action-translator LogManager.java:25 translate 
                ValidateVar v = new ValidateVar($DOUBLE.text, $NOMBRE.text);
                v.valid();
            
2020-04-27 20:03:20:629 action-translator LogManager.java:25 qattr [@-1,51:56='DOUBLE',<0>,35:49].[@-1,58:61='text',<0>,35:56]
2020-04-27 20:03:20:635 action-translator LogManager.java:25 qattr [@-1,65:70='NOMBRE',<0>,35:63].[@-1,72:75='text',<0>,35:70]
2020-04-27 20:03:20:636 action-translator LogManager.java:25 translate 
                System.out.println("ERROR de entrada");
            
