2020-04-27 17:07:30:283 grammar LogManager.java:25 before: (COMBINED_GRAMMAR variables (RULES (RULE variables (BLOCK (ALT tipos))) (RULE tipos (BLOCK (ALT 'int' INT {
                System.out.println($INT.text);
            }))) (RULE INT (BLOCK (ALT [0-9])))))
2020-04-27 17:07:30:297 grammar LogManager.java:25 after: (COMBINED_GRAMMAR variables (RULES (RULE variables (BLOCK (ALT tipos))) (RULE tipos (BLOCK (ALT 'int' INT {
                System.out.println($INT.text);
            }))) (RULE INT (BLOCK (ALT [0-9])))))
2020-04-27 17:07:30:322 grammar LogManager.java:25 after extract implicit lexer =(COMBINED_GRAMMAR variables (RULES (RULE variables (BLOCK (ALT tipos))) (RULE tipos (BLOCK (ALT 'int' INT {
                System.out.println($INT.text);
            })))))
2020-04-27 17:07:30:322 grammar LogManager.java:25 lexer =(LEXER_GRAMMAR variablesLexer (RULES (RULE T__0 (BLOCK (ALT 'int'))) (RULE INT (BLOCK (ALT [0-9])))))
2020-04-27 17:07:31:054 semantics LogManager.java:25 tokens={EOF=-1, T__0=1, INT=2}
2020-04-27 17:07:31:054 semantics LogManager.java:25 strings={'int'=1}
2020-04-27 17:07:31:123 action-translator LogManager.java:25 translate 
                System.out.println($INT.text);
            
2020-04-27 17:07:31:157 action-translator LogManager.java:25 qattr [@-1,38:40='INT',<0>,10:36].[@-1,42:45='text',<0>,10:40]
