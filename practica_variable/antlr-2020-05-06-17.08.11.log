2020-05-06 17:08:10:664 grammar LogManager.java:25 before: (COMBINED_GRAMMAR variables (RULES (RULE variables (BLOCK (ALT estructura))) (RULE estructura (BLOCK (ALT INT NOMBRE {
                ValidateVar v = new ValidateVar($NOMBRE.text);
                if(v.valid())
                    System.out.println("Declaracion sin errores");
                else
                    System.out.println("ERROR");
            }) (ALT FLOAT NOMBRE {
                ValidateVar v = new ValidateVar($NOMBRE.text);
                if(v.valid())
                    System.out.println("Declaracion sin errores");
                else
                    System.out.println("ERROR");
            }) (ALT CHAR NOMBRE {
                ValidateVar v = new ValidateVar($NOMBRE.text);
                if(v.valid())
                    System.out.println("Declaracion sin errores");
                else
                    System.out.println("ERROR");
            }) (ALT BOOLEAN NOMBRE {
                ValidateVar v = new ValidateVar($NOMBRE.text);
                if(v.valid())
                    System.out.println("Declaracion sin errores");
                else
                    System.out.println("ERROR");
            }) (ALT DOUBLE NOMBRE {
                ValidateVar v = new ValidateVar($NOMBRE.text);
                if(v.valid())
                    System.out.println("Declaracion sin errores");
                else
                    System.out.println("ERROR");
            }) (ALT {
                System.out.println("ERROR");
            }))) (RULE INT (BLOCK (ALT 'int'))) (RULE CHAR (BLOCK (ALT 'char'))) (RULE FLOAT (BLOCK (ALT 'float'))) (RULE BOOLEAN (BLOCK (ALT 'boolean'))) (RULE DOUBLE (BLOCK (ALT 'double'))) (RULE NOMBRE (BLOCK (ALT (+ (BLOCK (ALT [a-zA-Z0-9_]))) PC))) (RULE PC (BLOCK (ALT ';'))) (RULE ENTER (BLOCK (ALT [\r\n]))) (RULE ESPACIOS (BLOCK (LEXER_ALT_ACTION (ALT [ ]) skip)))))
2020-05-06 17:08:10:680 grammar LogManager.java:25 after: (COMBINED_GRAMMAR variables (RULES (RULE variables (BLOCK (ALT estructura))) (RULE estructura (BLOCK (ALT INT NOMBRE {
                ValidateVar v = new ValidateVar($NOMBRE.text);
                if(v.valid())
                    System.out.println("Declaracion sin errores");
                else
                    System.out.println("ERROR");
            }) (ALT FLOAT NOMBRE {
                ValidateVar v = new ValidateVar($NOMBRE.text);
                if(v.valid())
                    System.out.println("Declaracion sin errores");
                else
                    System.out.println("ERROR");
            }) (ALT CHAR NOMBRE {
                ValidateVar v = new ValidateVar($NOMBRE.text);
                if(v.valid())
                    System.out.println("Declaracion sin errores");
                else
                    System.out.println("ERROR");
            }) (ALT BOOLEAN NOMBRE {
                ValidateVar v = new ValidateVar($NOMBRE.text);
                if(v.valid())
                    System.out.println("Declaracion sin errores");
                else
                    System.out.println("ERROR");
            }) (ALT DOUBLE NOMBRE {
                ValidateVar v = new ValidateVar($NOMBRE.text);
                if(v.valid())
                    System.out.println("Declaracion sin errores");
                else
                    System.out.println("ERROR");
            }) (ALT {
                System.out.println("ERROR");
            }))) (RULE INT (BLOCK (ALT 'int'))) (RULE CHAR (BLOCK (ALT 'char'))) (RULE FLOAT (BLOCK (ALT 'float'))) (RULE BOOLEAN (BLOCK (ALT 'boolean'))) (RULE DOUBLE (BLOCK (ALT 'double'))) (RULE NOMBRE (BLOCK (ALT (+ (BLOCK (ALT [a-zA-Z0-9_]))) PC))) (RULE PC (BLOCK (ALT ';'))) (RULE ENTER (BLOCK (ALT [\r\n]))) (RULE ESPACIOS (BLOCK (LEXER_ALT_ACTION (ALT [ ]) skip)))))
2020-05-06 17:08:10:701 grammar LogManager.java:25 after extract implicit lexer =(COMBINED_GRAMMAR variables (RULES (RULE variables (BLOCK (ALT estructura))) (RULE estructura (BLOCK (ALT INT NOMBRE {
                ValidateVar v = new ValidateVar($NOMBRE.text);
                if(v.valid())
                    System.out.println("Declaracion sin errores");
                else
                    System.out.println("ERROR");
            }) (ALT FLOAT NOMBRE {
                ValidateVar v = new ValidateVar($NOMBRE.text);
                if(v.valid())
                    System.out.println("Declaracion sin errores");
                else
                    System.out.println("ERROR");
            }) (ALT CHAR NOMBRE {
                ValidateVar v = new ValidateVar($NOMBRE.text);
                if(v.valid())
                    System.out.println("Declaracion sin errores");
                else
                    System.out.println("ERROR");
            }) (ALT BOOLEAN NOMBRE {
                ValidateVar v = new ValidateVar($NOMBRE.text);
                if(v.valid())
                    System.out.println("Declaracion sin errores");
                else
                    System.out.println("ERROR");
            }) (ALT DOUBLE NOMBRE {
                ValidateVar v = new ValidateVar($NOMBRE.text);
                if(v.valid())
                    System.out.println("Declaracion sin errores");
                else
                    System.out.println("ERROR");
            }) (ALT {
                System.out.println("ERROR");
            })))))
2020-05-06 17:08:10:701 grammar LogManager.java:25 lexer =(LEXER_GRAMMAR variablesLexer (RULES (RULE INT (BLOCK (ALT 'int'))) (RULE CHAR (BLOCK (ALT 'char'))) (RULE FLOAT (BLOCK (ALT 'float'))) (RULE BOOLEAN (BLOCK (ALT 'boolean'))) (RULE DOUBLE (BLOCK (ALT 'double'))) (RULE NOMBRE (BLOCK (ALT (+ (BLOCK (ALT [a-zA-Z0-9_]))) PC))) (RULE PC (BLOCK (ALT ';'))) (RULE ENTER (BLOCK (ALT [\r\n]))) (RULE ESPACIOS (BLOCK (LEXER_ALT_ACTION (ALT [ ]) skip)))))
2020-05-06 17:08:11:023 semantics LogManager.java:25 tokens={EOF=-1, INT=1, CHAR=2, FLOAT=3, BOOLEAN=4, DOUBLE=5, NOMBRE=6, PC=7, ENTER=8, ESPACIOS=9}
2020-05-06 17:08:11:023 semantics LogManager.java:25 strings={'int'=1, 'char'=2, 'float'=3, 'boolean'=4, 'double'=5, ';'=7}
2020-05-06 17:08:11:034 LL1 LogManager.java:25 
DECISION 0 in rule estructura
2020-05-06 17:08:11:039 LL1 LogManager.java:25 look=[1, 3, 2, 4, 5, <EOF>]
2020-05-06 17:08:11:039 LL1 LogManager.java:25 LL(1)? true
2020-05-06 17:08:11:062 action-translator LogManager.java:25 translate 
                ValidateVar v = new ValidateVar($NOMBRE.text);
                if(v.valid())
                    System.out.println("Declaracion sin errores");
                else
                    System.out.println("ERROR");
            
2020-05-06 17:08:11:062 action-translator LogManager.java:25 qattr [@-1,51:56='NOMBRE',<0>,11:49].[@-1,58:61='text',<0>,11:56]
2020-05-06 17:08:11:064 action-translator LogManager.java:25 translate 
                ValidateVar v = new ValidateVar($NOMBRE.text);
                if(v.valid())
                    System.out.println("Declaracion sin errores");
                else
                    System.out.println("ERROR");
            
2020-05-06 17:08:11:064 action-translator LogManager.java:25 qattr [@-1,51:56='NOMBRE',<0>,20:49].[@-1,58:61='text',<0>,20:56]
2020-05-06 17:08:11:065 action-translator LogManager.java:25 translate 
                ValidateVar v = new ValidateVar($NOMBRE.text);
                if(v.valid())
                    System.out.println("Declaracion sin errores");
                else
                    System.out.println("ERROR");
            
2020-05-06 17:08:11:065 action-translator LogManager.java:25 qattr [@-1,51:56='NOMBRE',<0>,29:49].[@-1,58:61='text',<0>,29:56]
2020-05-06 17:08:11:065 action-translator LogManager.java:25 translate 
                ValidateVar v = new ValidateVar($NOMBRE.text);
                if(v.valid())
                    System.out.println("Declaracion sin errores");
                else
                    System.out.println("ERROR");
            
2020-05-06 17:08:11:066 action-translator LogManager.java:25 qattr [@-1,51:56='NOMBRE',<0>,38:49].[@-1,58:61='text',<0>,38:56]
2020-05-06 17:08:11:066 action-translator LogManager.java:25 translate 
                ValidateVar v = new ValidateVar($NOMBRE.text);
                if(v.valid())
                    System.out.println("Declaracion sin errores");
                else
                    System.out.println("ERROR");
            
2020-05-06 17:08:11:066 action-translator LogManager.java:25 qattr [@-1,51:56='NOMBRE',<0>,47:49].[@-1,58:61='text',<0>,47:56]
2020-05-06 17:08:11:067 action-translator LogManager.java:25 translate 
                System.out.println("ERROR");
            
