2020-04-27 21:49:33:984 grammar LogManager.java:25 before: (COMBINED_GRAMMAR variables (RULES (RULE variables (BLOCK (ALT estructura))) (RULE estructura (BLOCK (ALT INT NOMBRE {
                System.out.println($INT.text);
                ValidateVar v = new ValidateVar($INT.text, $NOMBRE.text);
                v.valid();
            }) (ALT FLOAT NOMBRE {
                ValidateVar v = new ValidateVar($FLOAT.text, $NOMBRE.text);
                v.valid();
            }) (ALT CHAR NOMBRE {
                ValidateVar v = new ValidateVar($CHAR.text, $NOMBRE.text);
                v.valid();
            }) (ALT BOOLEAN NOMBRE {
                ValidateVar v = new ValidateVar($BOOLEAN.text, $NOMBRE.text);
                v.valid();
            }) (ALT DOUBLE NOMBRE {
                ValidateVar v = new ValidateVar($DOUBLE.text, $NOMBRE.text);
                v.valid();
            }) (ALT {
                System.out.println("ERROR");
            }))) (RULE INT (BLOCK (ALT 'int'))) (RULE CHAR (BLOCK (ALT 'char'))) (RULE FLOAT (BLOCK (ALT 'float'))) (RULE BOOLEAN (BLOCK (ALT 'boolean'))) (RULE DOUBLE (BLOCK (ALT 'double'))) (RULE NOMBRE (BLOCK (ALT (+ (BLOCK (ALT [a-zA-Z0-9_]))) PC))) (RULE PC (BLOCK (ALT ';'))) (RULE ENTER (BLOCK (ALT [\r\n]))) (RULE ESPACIOS (BLOCK (LEXER_ALT_ACTION (ALT [ ]) skip)))))
2020-04-27 21:49:34:012 grammar LogManager.java:25 after: (COMBINED_GRAMMAR variables (RULES (RULE variables (BLOCK (ALT estructura))) (RULE estructura (BLOCK (ALT INT NOMBRE {
                System.out.println($INT.text);
                ValidateVar v = new ValidateVar($INT.text, $NOMBRE.text);
                v.valid();
            }) (ALT FLOAT NOMBRE {
                ValidateVar v = new ValidateVar($FLOAT.text, $NOMBRE.text);
                v.valid();
            }) (ALT CHAR NOMBRE {
                ValidateVar v = new ValidateVar($CHAR.text, $NOMBRE.text);
                v.valid();
            }) (ALT BOOLEAN NOMBRE {
                ValidateVar v = new ValidateVar($BOOLEAN.text, $NOMBRE.text);
                v.valid();
            }) (ALT DOUBLE NOMBRE {
                ValidateVar v = new ValidateVar($DOUBLE.text, $NOMBRE.text);
                v.valid();
            }) (ALT {
                System.out.println("ERROR");
            }))) (RULE INT (BLOCK (ALT 'int'))) (RULE CHAR (BLOCK (ALT 'char'))) (RULE FLOAT (BLOCK (ALT 'float'))) (RULE BOOLEAN (BLOCK (ALT 'boolean'))) (RULE DOUBLE (BLOCK (ALT 'double'))) (RULE NOMBRE (BLOCK (ALT (+ (BLOCK (ALT [a-zA-Z0-9_]))) PC))) (RULE PC (BLOCK (ALT ';'))) (RULE ENTER (BLOCK (ALT [\r\n]))) (RULE ESPACIOS (BLOCK (LEXER_ALT_ACTION (ALT [ ]) skip)))))
2020-04-27 21:49:34:035 grammar LogManager.java:25 after extract implicit lexer =(COMBINED_GRAMMAR variables (RULES (RULE variables (BLOCK (ALT estructura))) (RULE estructura (BLOCK (ALT INT NOMBRE {
                System.out.println($INT.text);
                ValidateVar v = new ValidateVar($INT.text, $NOMBRE.text);
                v.valid();
            }) (ALT FLOAT NOMBRE {
                ValidateVar v = new ValidateVar($FLOAT.text, $NOMBRE.text);
                v.valid();
            }) (ALT CHAR NOMBRE {
                ValidateVar v = new ValidateVar($CHAR.text, $NOMBRE.text);
                v.valid();
            }) (ALT BOOLEAN NOMBRE {
                ValidateVar v = new ValidateVar($BOOLEAN.text, $NOMBRE.text);
                v.valid();
            }) (ALT DOUBLE NOMBRE {
                ValidateVar v = new ValidateVar($DOUBLE.text, $NOMBRE.text);
                v.valid();
            }) (ALT {
                System.out.println("ERROR");
            })))))
2020-04-27 21:49:34:035 grammar LogManager.java:25 lexer =(LEXER_GRAMMAR variablesLexer (RULES (RULE INT (BLOCK (ALT 'int'))) (RULE CHAR (BLOCK (ALT 'char'))) (RULE FLOAT (BLOCK (ALT 'float'))) (RULE BOOLEAN (BLOCK (ALT 'boolean'))) (RULE DOUBLE (BLOCK (ALT 'double'))) (RULE NOMBRE (BLOCK (ALT (+ (BLOCK (ALT [a-zA-Z0-9_]))) PC))) (RULE PC (BLOCK (ALT ';'))) (RULE ENTER (BLOCK (ALT [\r\n]))) (RULE ESPACIOS (BLOCK (LEXER_ALT_ACTION (ALT [ ]) skip)))))
2020-04-27 21:49:34:463 semantics LogManager.java:25 tokens={EOF=-1, INT=1, CHAR=2, FLOAT=3, BOOLEAN=4, DOUBLE=5, NOMBRE=6, PC=7, ENTER=8, ESPACIOS=9}
2020-04-27 21:49:34:463 semantics LogManager.java:25 strings={'int'=1, 'char'=2, 'float'=3, 'boolean'=4, 'double'=5, ';'=7}
2020-04-27 21:49:34:477 LL1 LogManager.java:25 
DECISION 0 in rule estructura
2020-04-27 21:49:34:480 LL1 LogManager.java:25 look=[1, 3, 2, 4, 5, <EOF>]
2020-04-27 21:49:34:481 LL1 LogManager.java:25 LL(1)? true
2020-04-27 21:49:34:499 action-translator LogManager.java:25 translate 
                System.out.println($INT.text);
                ValidateVar v = new ValidateVar($INT.text, $NOMBRE.text);
                v.valid();
            
2020-04-27 21:49:34:499 action-translator LogManager.java:25 qattr [@-1,38:40='INT',<0>,11:36].[@-1,42:45='text',<0>,11:40]
2020-04-27 21:49:34:500 action-translator LogManager.java:25 qattr [@-1,99:101='INT',<0>,12:49].[@-1,103:106='text',<0>,12:53]
2020-04-27 21:49:34:500 action-translator LogManager.java:25 qattr [@-1,110:115='NOMBRE',<0>,12:60].[@-1,117:120='text',<0>,12:67]
2020-04-27 21:49:34:501 action-translator LogManager.java:25 translate 
                ValidateVar v = new ValidateVar($FLOAT.text, $NOMBRE.text);
                v.valid();
            
2020-04-27 21:49:34:502 action-translator LogManager.java:25 qattr [@-1,51:55='FLOAT',<0>,18:49].[@-1,57:60='text',<0>,18:55]
2020-04-27 21:49:34:502 action-translator LogManager.java:25 qattr [@-1,64:69='NOMBRE',<0>,18:62].[@-1,71:74='text',<0>,18:69]
2020-04-27 21:49:34:503 action-translator LogManager.java:25 translate 
                ValidateVar v = new ValidateVar($CHAR.text, $NOMBRE.text);
                v.valid();
            
2020-04-27 21:49:34:503 action-translator LogManager.java:25 qattr [@-1,51:54='CHAR',<0>,24:49].[@-1,56:59='text',<0>,24:54]
2020-04-27 21:49:34:503 action-translator LogManager.java:25 qattr [@-1,63:68='NOMBRE',<0>,24:61].[@-1,70:73='text',<0>,24:68]
2020-04-27 21:49:34:504 action-translator LogManager.java:25 translate 
                ValidateVar v = new ValidateVar($BOOLEAN.text, $NOMBRE.text);
                v.valid();
            
2020-04-27 21:49:34:506 action-translator LogManager.java:25 qattr [@-1,51:57='BOOLEAN',<0>,30:49].[@-1,59:62='text',<0>,30:57]
2020-04-27 21:49:34:506 action-translator LogManager.java:25 qattr [@-1,66:71='NOMBRE',<0>,30:64].[@-1,73:76='text',<0>,30:71]
2020-04-27 21:49:34:507 action-translator LogManager.java:25 translate 
                ValidateVar v = new ValidateVar($DOUBLE.text, $NOMBRE.text);
                v.valid();
            
2020-04-27 21:49:34:507 action-translator LogManager.java:25 qattr [@-1,51:56='DOUBLE',<0>,36:49].[@-1,58:61='text',<0>,36:56]
2020-04-27 21:49:34:507 action-translator LogManager.java:25 qattr [@-1,65:70='NOMBRE',<0>,36:63].[@-1,72:75='text',<0>,36:70]
2020-04-27 21:49:34:507 action-translator LogManager.java:25 translate 
                System.out.println("ERROR");
            
